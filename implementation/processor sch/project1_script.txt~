Script started on November 23, 2015 10:19:32 PM CST
> g++ DynamicSchedule.c	-o scheduler
> scheduler
Enter the latency file along with it's path
proj_latencies
Enter the instruction file along with it's path
testfile1
res[0] is : L.D
This instruction is of I type: loop L.D       F4 2000 R0
res[0] is : S.D
This instruction is of I type:       S.D       F8 4000 R0
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F2 F4 F6
res[0] is : SUB.D
This instruction is of R type:       SUB.D     F8 F8 F10
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F8 F4 F4
res[0] is : DIV.D
This instruction is of R type:       DIV.D     F8 F2 F4
res[0] is : DADD
This instruction is of R type:       DADD      R1 R2 R3
res[0] is : DADDI
This instruction is of I type:       DADDI     R2 R4 1
res[0] is : DADDUI
This instruction is of I type:       DADDUI    R1 R2 -8
res[0] is : DSUBI
This instruction is of I type:       DSUBI     R1 R2 1
res[0] is : BNEZ
This instruction is of I type:       BNEZ      R1 loop
res[0] is : BEQZ
This instruction is of I type:       BEQZ      R2 loop
 Do you want pipelining ? y/n
y
pc = 0 and scheduler.instructionCount=12
------Start to pipepline the instructions ------
                              Instr   issue    exec   write
          loop L.D       F4 2000 R0       1       2       3
               S.D       F8 4000 R0       2       3       4
                 ADD.D     F2 F4 F6       3       4       7
                SUB.D     F8 F8 F10       4       5       8
                 MUL.D     F8 F4 F4       5       6      13
                 DIV.D     F8 F2 F4       6       8      19
                 DADD      R1 R2 R3       8       9      12
                  DADDI     R2 R4 1       9      10      11
                 DADDUI    R1 R2 -8      10      11      12
                  DSUBI     R1 R2 1      12      13      14
                  BNEZ      R1 loop      13      14      15
                  BEQZ      R2 loop      14      15      16
> scheduler
Enter the latency file along with it's path
proj_latencies
Enter the instruction file along with it's path
testfile1
res[0] is : L.D
This instruction is of I type: loop L.D       F4 2000 R0
res[0] is : S.D
This instruction is of I type:       S.D       F8 4000 R0
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F2 F4 F6
res[0] is : SUB.D
This instruction is of R type:       SUB.D     F8 F8 F10
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F8 F4 F4
res[0] is : DIV.D
This instruction is of R type:       DIV.D     F8 F2 F4
res[0] is : DADD
This instruction is of R type:       DADD      R1 R2 R3
res[0] is : DADDI
This instruction is of I type:       DADDI     R2 R4 1
res[0] is : DADDUI
This instruction is of I type:       DADDUI    R1 R2 -8
res[0] is : DSUBI
This instruction is of I type:       DSUBI     R1 R2 1
res[0] is : BNEZ
This instruction is of I type:       BNEZ      R1 loop
res[0] is : BEQZ
This instruction is of I type:       BEQZ      R2 loop
 Do you want pipelining ? y/n
n
pc = 0 and scheduler.instructionCount=12
                              Instr   issue    read    exec   write
          loop L.D       F4 2000 R0       1       2       3       4
               S.D       F8 4000 R0       2       3       4       5
                 ADD.D     F2 F4 F6       3       5       6       9
                SUB.D     F8 F8 F10      10      11      12      15
                 MUL.D     F8 F4 F4      11      12      13      20
                 DIV.D     F8 F2 F4      12      13      14      25
                 DADD      R1 R2 R3      16      17      18      21
                  DADDI     R2 R4 1      17      18      19      20
                 DADDUI    R1 R2 -8      21      22      23      24
                  DSUBI     R1 R2 1      25      26      27      28
                  BNEZ      R1 loop      26      27      28      29
                  BEQZ      R2 loop      27      30      31      32
> ls
620_proj_isyntax         DynamicSchedule.c        hw5_problemA_latencies
620_proj_latencies       exam_problem3_isyntax    project1_script
a.out                    exam_problem3_latencies  scheduler
backup                   hw5_problemA_isyntax
> scheduler
Enter the latency file along with it's path
proj_latencies
Enter the instruction file along with it's path
testfile
res[0] is : L.D
This instruction is of I type:       L.D       F2 0 R1
res[0] is : L.D
This instruction is of I type:       L.D       F4 0 R2
res[0] is : L.D
This instruction is of I type:       L.D       F6 0 R3
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F8 F2 F0
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F4 F2
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F12 F10 F6
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F14 F10 F8
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F16 F14 F12
res[0] is : S.D
This instruction is of I type:       S.D       F16 0 R4
 Do you want pipelining ? y/n
y
pc = 0 and scheduler.instructionCount=9
------Start to pipepline the instructions ------
                              Instr   issue    exec   write
                  L.D       F2 0 R1       1       2       3
                  L.D       F4 0 R2       2       3       4
                  L.D       F6 0 R3       4       5       6
                 ADD.D     F8 F2 F0       5       6       9
                MUL.D     F10 F4 F2       6       7      14
               MUL.D     F12 F10 F6       7      15      22
               ADD.D     F14 F10 F8       8      15      18
              ADD.D     F16 F14 F12      10      23      26
                 S.D       F16 0 R4      11      12      27
> scheduler
Enter the latency file along with it's path
proj_latencies
Enter the instruction file along with it's path
testfile
res[0] is : L.D
This instruction is of I type:       L.D       F2 0 R1
res[0] is : L.D
This instruction is of I type:       L.D       F4 0 R2
res[0] is : L.D
This instruction is of I type:       L.D       F6 0 R3
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F8 F2 F0
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F4 F2
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F12 F10 F6
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F14 F10 F8
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F16 F14 F12
res[0] is : S.D
This instruction is of I type:       S.D       F16 0 R4
 Do you want pipelining ? y/n
n
pc = 0 and scheduler.instructionCount=9
                              Instr   issue    read    exec   write
                  L.D       F2 0 R1       1       2       3       4
                  L.D       F4 0 R2       5       6       7       8
                  L.D       F6 0 R3       9      10      11      12
                 ADD.D     F8 F2 F0      10      11      12      15
                MUL.D     F10 F4 F2      11      12      13      20
               MUL.D     F12 F10 F6      21      22      23      30
               ADD.D     F14 F10 F8      22      23      24      27
              ADD.D     F16 F14 F12      28      31      32      35
                 S.D       F16 0 R4      29      36      37      38
> ls
620_proj_isyntax         DynamicSchedule.c        hw5_problemA_latencies
620_proj_latencies       exam_problem3_isyntax    project1_script
a.out                    exam_problem3_latencies  scheduler
backup                   hw5_problemA_isyntax
> scheduler
Enter the latency file along with it's path
proj_latencies
Enter the instruction file along with it's path
pro3_isyntax
res[0] is : L.D
This instruction is of I type:       L.D       F6 0 R1
res[0] is : S.D
This instruction is of I type:       S.D       F8 0 R2
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F6 F8
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F14 F4 F6
res[0] is : DIV.D
This instruction is of R type:       DIV.D     F12 F2 F10
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F10 F0
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F14
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F10
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F16
res[0] is : S.D
This instruction is of I type:       S.D       F12 0 R3
 Do you want pipelining ? y/n
y
pc = 0 and scheduler.instructionCount=10
------Start to pipepline the instructions ------
                              Instr   issue    exec   write
                  L.D       F6 0 R1       1       2       3
                  S.D       F8 0 R2       2       3       4
                MUL.D     F10 F6 F8       3       5      12
                MUL.D     F14 F4 F6       4       5      12
               DIV.D     F12 F2 F10       5      13      24
               MUL.D     F10 F10 F0      13      14      21
              ADD.D     F12 F12 F14      14      25      28
              ADD.D     F12 F12 F10      15      29      32
              ADD.D     F12 F12 F16      29      33      36
                 S.D       F12 0 R3      30      31      37
> scheduler
Enter the latency file along with it's path
620_proj_latencies
Enter the instruction file along with it's path
exam_problem3_isyntax
res[0] is : L.D
This instruction is of I type:       L.D       F6 0 R1
res[0] is : S.D
This instruction is of I type:       S.D       F8 0 R2
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F6 F8
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F14 F4 F6
res[0] is : DIV.D
This instruction is of R type:       DIV.D     F12 F2 F10
res[0] is : MUL.D
This instruction is of R type:       MUL.D     F10 F10 F0
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F14
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F10
res[0] is : ADD.D
This instruction is of R type:       ADD.D     F12 F12 F16
res[0] is : S.D
This instruction is of I type:       S.D       F12 0 R3
 Do you want pipelining ? y/n
n
pc = 0 and scheduler.instructionCount=10
                              Instr   issue    read    exec   write
                  L.D       F6 0 R1       1       2       3       4
                  S.D       F8 0 R2       2       3       4       5
                MUL.D     F10 F6 F8       3       6       7      14
                MUL.D     F14 F4 F6      15      16      17      24
               DIV.D     F12 F2 F10      16      17      18      29
               MUL.D     F10 F10 F0      25      26      27      34
              ADD.D     F12 F12 F14      26      30      31      34
              ADD.D     F12 F12 F10      35      36      37      40
              ADD.D     F12 F12 F16      41      42      43      46
                 S.D       F12 0 R3      42      47      48      49
> exit
exit

script done on November 23, 2015 10:24:40 PM CST
