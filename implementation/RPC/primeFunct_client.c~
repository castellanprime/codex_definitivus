/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

/**
* NAME: OKUSANYA OLUWADAMILOLA
* HOMEWORK : 2
* DATE: MONDAY 0CT 5, 2015
*/


#include "primeFunct.h"
#include <time.h>   // responsible for the clock() function
#include <stdio.h>


// primefinder_1 function
// Does the client set-up and calling functions
// @args: hostname

void
primefinder_1(char *host)
{
	CLIENT *clnt;
	TOKEN  *result_1;
	TOKEN  isprime_1_arg;

	const int LIMIT = 10000;

#ifndef	DEBUG
	clnt = clnt_create (host, PRIMEFINDER, ONE, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */
	isprime_1_arg.initialTime = (int)clock();
	isprime_1_arg.nextInt = 2;
	isprime_1_arg.numberOfHops = 0;
	isprime_1_arg.numOfPrimes = 0;
	result_1 = isprime_1(&isprime_1_arg, clnt);
	if (result_1 == (TOKEN *) NULL) {
		clnt_perror (clnt, "call failed");
	} else {
		while (result_1->nextInt <= LIMIT){
		   isprime_1_arg.numberOfHops = result_1->numberOfHops;
		   isprime_1_arg.numOfPrimes = result_1->numOfPrimes;
		   isprime_1_arg.nextInt = result_1->nextInt;
		   printf("Next Integer: %d\n", result_1->nextInt);
		   printf("Number of Hops: %d\n", result_1->numberOfHops);
		   printf("Number of Primes: %d\n",
					result_1->numOfPrimes); 
		   result_1 = isprime_1(&isprime_1_arg, clnt);
		}
	}
	clock_t curTime = clock() - (clock_t)isprime_1_arg.initialTime;
	printf("\n\n");
	printf("Total number of hops: %d\n", result_1->numberOfHops);
	printf("Total time run: %f secs \n", ((double)curTime /
				CLOCKS_PER_SEC));
#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *host;

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];
	primefinder_1 (host);
	exit (0);
}
